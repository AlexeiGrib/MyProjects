from random import randint


def game_core_v3(number:int):
    
    """
    В основе функции лежит самописная Python-реализация алгоритма бинарного поиска в упорядоченном массиве чисел.
    На вход функция принимает целое число (формат int) и возвращает значение переменной-счётчика, что эквивалентно 
    количеству попыток, которое понадобилось для угадывания числа.
    
    Так как компьютер всегда загадывает число от 1 до 100, условимся, что массивом чисел будет список, первый элемент 
    которого - единица, а последний - сотня.
    
    """
    array = [i for i in range(1, 101)]
    
    """
    Также нам потребуется определить верхнюю и нижнюю границы массива в виде переменных для определения части массива, в 
    котором будем производить поиск загаданного компьютером числа. Вместе с тем определим переменную-счётчик, которая
    будет хранить число попыток угадывания числа.
    
    """
    left = 1
    right = 100
    counter = 0
    
    """
    Идея функционального блока ниже в следующем: 
    1. Сначала определяем первый предполагаемый ответ: им будем элемент массива, индекс которого - среднее значение левой 
    и правой границы массива. В случае, если индекс - дробное число, округляем его в нижную стороную. На случай, если чис-
    ло, загаданное компьютером, равняется ста, предусмотрен другой вариант определения предполагаемого ответа, при котором
    дробное число округляется в большую сторону. Это делает решение универсальным и предохраняет от вхождения в бесконечный
    цикл.
    2. Сравниваем предполагаемый ответ с загаданным числом. Если получаем равенство - увеличиваем счётчик на единицу и 
    выходим из цикла.
    3. Если предполагаемый ответ больше загаданного числа, уменьшаем правую границу массива до величины предполагаемого 
    ответа и увеличиваем счётчик на единицу.
    4. Если предполагаемый ответ меньше загаданного числа, увеличиваем левую границу массива до величины предполагаемого
    ответа и увеличиваем счётчик на единицу.
    """
    
    while True:
        if number == 100:
            predict = ((left+right) // 2) + ((left+right) % 2)
        else:
            predict = (left+right) // 2 
        
        if predict == number:
            counter += 1
            break
        else:
            if predict > number:
                right = predict
                counter += 1
            else:
                left = predict
                counter += 1
                
    return counter
                
"""
Чтобы получить среднее количество попыток, за которое новая модификация алгоритма угадывает число, загаданное компьютером, 
прогоним функцию в цикле 1000 раз. Кроме того, для чистоты эксперимента, с помощью модуля random.randint на каждой 
итерации цикла мы будем подавать на вход функции разные числа от 1 до 100. Результат функции - количество попыток - 
будем складывать в отдельный список.
"""
result = []

for i in range(1000):
    result.append(game_core_v3(randint(1, 100)))
    
print('Среднее количество попыток, затраченное на угадывание числа:', int(sum(result) / len(result)))